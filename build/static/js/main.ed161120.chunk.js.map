{"version":3,"sources":["components/tooltip_button.jsx","components/utils.js","components/switch.jsx","components/form.jsx","components/statusbar.jsx","components/output.jsx","App.js","reportWebVitals.js","index.js"],"names":["ToolTipButton","props","placement","overlay","tooltip","ref","triggerHandler","size","onClick","onMouseDown","onMouseUp","variant","children","toast_options","position","transition","Zoom","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","notification","success","msg","toast","warning","error","getTypeOf","data","Array","isArray","isObjectOfObjects","obj","keys","Object","every","key","common_keys","arr","length","console","log","res","slice","map","sub_arr","filter","x","includes","intersection","are_common_keys_from_array","startsWith","join_path","parent_path","makeTable","entries","flatMap","sub_obj","Set","table","forEach","main_key","parseInt","substr","row","path_key","value","push","headings","concat","obj_of_obj_to_table","doesObjectIncludeText","text","toString","toLowerCase","filterObj","filterText","new_obj","i","filtered_obj","flag","truncateStrings","n","Switch","name","id","toUpperCase","substring","className","style","paddingLeft","marginBottom","type","this","checked","onChange","textAlign","htmlFor","Component","FormComponent","state","jsonError","errorMarkers","isJsonValid","jsonInputRef","handleEditorDidMount","editor","monaco","editorRef","current","toggleSettings","event","target","new_state","settings","setState","document","body","classList","toggle","handleEditorValidation","markers","handleJsonInputChanged","json_str","json","undefined","json_obj","JSON","parse","isJsonValiderrorMarkers","err","getErrorPosition","defaultPos","indexOf","pieces","split","lastOnce","goToErrorPosition","errPos","renderError","Fragment","Alert","Heading","Table","responsive","verticalAlign","rowSpan","colSpan","marker","index","message","startLineNumber","startColumn","endLineNumber","endColumn","React","createRef","darkMode","add","is_dark_mode","Row","Col","xs","language","defaultLanguage","height","onMount","onValidate","theme","loading","Spinner","animation","options","wordWrap","minimap","enabled","float","display","Card","bg","width","Header","marginToo","marginLeft","borderRadius","Body","Title","toggleControls","control","Text","InputGroup","hasValidation","FormControl","isInvalid","Form","Control","Feedback","StatusBar","handleExpandAll","handleExpandCollapseAll","handleCollapseAll","handleSearchTextChanged","timeout","clearTimeout","setTimeout","onSearchTextChanged","clearSearchText","searchRef","copyPathToClipboard","jsonRef","navigator","clipboard","writeText","typing_timeout","backgroundColor","zIndex","top","sm","disabled","color","json_path","placeholder","aria-label","aria-describedby","Append","Button","searchText","Visualizer","lazy","OutputComponent","selected_json_path","expand_signal","custom_themes","light","dark","selectedJsonUpdated","path","signal","new_value","selectedJsonRef","fallback","root","showJsonPath","App","bind","default","newestOnTop","rtl","pauseOnFocusLoss","Navbar","Container","fluid","Brand","src","alt","monospaceFont","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed161120.chunk.js","sourcesContent":["import React from \"react\";\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nfunction ToolTipButton(props) {\n  return (\n    <>\n      <OverlayTrigger\n        placement=\"bottom\"\n        overlay={<Tooltip>{props.tooltip}</Tooltip>}\n      >\n        {({ ref, ...triggerHandler }) => (\n          <Button\n            ref={ref}\n            size=\"sm\"\n            onClick={props.onClick}\n            onMouseDown={props.onMouseDown}\n            onMouseUp={props.onMouseUp}\n            variant={props.variant}\n            {...triggerHandler}\n          >\n            {props.children}\n          </Button>\n        )}\n      </OverlayTrigger>\n    </>\n  );\n\n  function renderTooltip(tooltipProps) {\n    return <Tooltip {...tooltipProps}>{props.tooltip}</Tooltip>;\n  }\n\n  return (\n    <OverlayTrigger\n      placement=\"top\"\n      delay={{ show: 200, hide: 400 }}\n      overlay={renderTooltip}\n    >\n      <Button\n        size=\"sm\"\n        variant={props.variant}\n        onClick={props.onClick}\n        onMouseDown={props.onMouseDown}\n        onMouseUp={props.onMouseUp}\n        ref={props.RefHolder}\n      >\n        {props.children}\n      </Button>\n    </OverlayTrigger>\n  );\n}\n\nexport default ToolTipButton;\n","import { Zoom, toast } from \"react-toastify\";\nconst toast_options = {\n  position: \"top-center\",\n  transition: Zoom,\n  autoClose: 1000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: false,\n  draggable: false,\n};\n\nexport const notification = {\n  success: (msg) => toast.success(msg, toast_options),\n  warning: (msg) => toast.warning(msg, toast_options),\n  error: (msg) => toast.error(msg, toast_options),\n};\n\n// Intersection for array of arrays\nfunction intersection(arr) {\n  if (arr.length < 1) {\n    return [];\n  }\n\n  console.log(\"Find intersection of arr: \", arr);\n  let res = arr[0];\n  arr.slice(1).map((sub_arr) => {\n    res = res.filter((x) => sub_arr.includes(x));\n    return null;\n  });\n  return res;\n}\n\n// given two arrays,\n// X = [x1, x2, x3, ...]\n// Y = [y1, y2, y3, ...]\n// It will return [ [x1, y1], [x2, y2], [x3, y3], ...]\n// function zip(X, Y) {\n//   return X.map((xi, i) => [xi, Y[i]]);\n// }\n\nfunction getTypeOf(data) {\n  if (data === null) {\n    return \"null\";\n  }\n  if (Array.isArray(data)) {\n    return \"Array\";\n  }\n  return typeof data;\n}\n\n// function isArrayOfObjects(arr) {\n//   let is_array_of_obj = arr.every((x) => getTypeOf(x) === \"object\");\n//   return is_array_of_obj && arr.length > 1;\n// }\n\nfunction isObjectOfObjects(obj) {\n  if (getTypeOf(obj) === \"object\") {\n    const keys = Object.keys(obj);\n    let is_obj_of_obj = keys.every((key) => getTypeOf(obj[key]) === \"object\");\n    if (!is_obj_of_obj) {\n      return false;\n    }\n    const common_keys = intersection(keys.map((key) => Object.keys(obj[key])));\n    const are_common_keys_from_array = common_keys.every((key) =>\n      key.startsWith(\"index__\")\n    );\n    return (\n      keys.length > 1 && common_keys.length > 0 && !are_common_keys_from_array\n    );\n  }\n  return false;\n}\n\n// function transformObj(obj) {\n//   const object_type = getTypeOf(obj);\n//   if (object_type === \"Array\") {\n//     return obj.map((x, index) => [\"int__\" + index, x]);\n//   }\n//   if (object_type === \"object\") {\n//     return obj.entries.map(([key, value]) => [key, value]);\n//   }\n// }\n\n// function arr_to_table(arr) {\n//   let table = arr.map((value, key) => [\n//     { path_key: key, value: key },\n//     { path_key: \"\", value: value },\n//   ]);\n//   return { headings: [\"[index]\", \"\"], table: table };\n// }\n\nfunction obj_to_table(obj) {\n  let table = Object.entries(obj).map(([key, value]) => {\n    if (key.startsWith(\"index__\")) {\n      key = parseInt(key.substr(7));\n    }\n\n    return [\n      { path_key: key, value: key },\n      { path_key: \"\", value: value },\n    ];\n  });\n  return { headings: [], table: table };\n}\n\n// let { headings, table } = arr_to_table([10, 13, 123, 43]);\n// console.log(\"HEADINGS\", headings);\n// table.map((row) => {\n//   console.log(\"ROW\", row);\n// });\n\n// let { headings, table } = obj_to_table({ a: \"b\", c: \"d\", e: \"123\" });\n// console.log(\"HEADINGS \", headings);\n// table.map((row) => {\n//   console.log(\"ROW\", row);\n// });\n\n// function arr_of_obj_to_table(arr) {\n//   // find unique keys from the array of objects\n//   let keys = [...new Set(arr.flatMap((obj) => Object.keys(obj)))];\n//   let table = [];\n//   arr.forEach(function (obj, row_index) {\n//     let row = [{ path_key: row_index, value: row_index }];\n//     keys.forEach(function (key) {\n//       if (key in obj) {\n//         row.push({ path_key: key, value: obj[key] });\n//       } else {\n//         row.push(null);\n//       }\n//     });\n//     table.push(row);\n//   });\n//   return { headings: [\"[index]\"].concat(keys), table: table };\n// }\n\n// let { headings, table } = arr_of_obj_to_table([\n//   { a: \"b\", b: \"c\" },\n//   { a: \"b\", c: \"c\" },\n//   { a: \"b\" },\n// ]);\n// console.log(\"HEADINGS\", headings);\n// table.map((row) => {\n//   console.log(\"ROW\", row);\n// });\n\nfunction obj_of_obj_to_table(obj) {\n  // find unique keys from the object of objects\n  let keys = Object.entries(obj).flatMap(([_, sub_obj]) =>\n    Object.keys(sub_obj)\n  );\n  keys = [...new Set(keys)];\n\n  let table = [];\n  Object.entries(obj).forEach(function ([main_key, sub_obj]) {\n    if (main_key.startsWith(\"index__\")) {\n      main_key = parseInt(main_key.substr(7));\n    }\n    let row = [{ path_key: main_key, value: main_key }];\n    keys.forEach(function (key) {\n      if (key.startsWith(\"index__\")) {\n        key = parseInt(key.substr(7));\n      }\n      if (key in sub_obj) {\n        row.push({ path_key: key, value: sub_obj[key] });\n      } else {\n        row.push(null);\n      }\n    });\n    table.push(row);\n  });\n  return { headings: [\"[key]\"].concat(keys), table: table };\n}\n\n// const { headings, table } = obj_of_obj_to_table({\n//   key1: { sub_key1: \"b\", sub_key2: \"c\" },\n//   key2: { sub_key1: \"b\", sub_key3: \"c\" },\n//   key3: { sub_key4: \"b\" },\n// });\n// console.log(\"HEADINGS\", headings);\n// table.map((row) => {\n//   console.log(\"ROW\", row);\n// });\n\nexport function join_path(parent_path, key) {\n  if (!parent_path) {\n    parent_path = \"root\";\n  }\n\n  if (key === \"\" || key === \"[index]\") {\n    return parent_path;\n  }\n\n  const current_path = typeof key === \"string\" ? `[\"${key}\"]` : `[${key}]`;\n  return parent_path + current_path;\n}\n\nexport default function makeTable(data) {\n  // if (Array.isArray(data)) {\n  //   // An Array of objects\n  //   if (isArrayOfObjects(data)) {\n  //     return arr_of_obj_to_table(data);\n  //   }\n  //   // A Simple Array\n  //   return arr_to_table(data);\n  // } else\n  if (typeof data === \"object\") {\n    // An Object having another object as a value for each of its properties\n    // i.e. A nested Object\n    if (isObjectOfObjects(data)) {\n      return obj_of_obj_to_table(data);\n    }\n    // An Simple Object\n    return obj_to_table(data);\n  }\n}\n\nfunction doesObjectIncludeText(obj, text) {\n  if (obj === null) {\n    return \"null\".includes(text);\n  }\n  if (typeof obj === \"number\" || typeof obj === \"boolean\") {\n    return obj.toString().toLowerCase().includes(text);\n  }\n  if (typeof obj === \"string\") {\n    return obj.toLowerCase().includes(text);\n  }\n  return \"unsure\";\n}\n\nexport function filterObj(obj, filterText) {\n  // This function will accept `obj` of type {Array/Object}\n  // and will remove the elements/properties which do not include `filterText`\n\n  // convert Array to an object so that index are preserved when some elements are filtered out.\n  if (getTypeOf(obj) === \"Array\") {\n    let new_obj = {};\n    obj.forEach((x, i) => {\n      new_obj[\"index__\" + i] = x;\n    });\n    obj = new_obj;\n  }\n\n  if (!filterText) {\n    return obj;\n  }\n\n  let filtered_obj = {};\n  Object.entries(obj).forEach(([key, value]) => {\n    const flag =\n      doesObjectIncludeText(key, filterText) ||\n      doesObjectIncludeText(value, filterText);\n    if (flag === true) {\n      filtered_obj[key] = value;\n    } else if (flag === \"unsure\") {\n      value = filterObj(value, filterText);\n      if (Object.keys(value).length > 0) {\n        filtered_obj[key] = value;\n      }\n    }\n  });\n  return filtered_obj;\n  // const new_table = table.map((row) => {\n  //   let new_row = row.filter(function (cell) {\n  //     if (cell === null) {\n  //       return false;\n  //     }\n\n  //     let { value } = cell;\n  //     if (value === null) {\n  //       return false;\n  //     }\n\n  //     if (typeof value === \"number\" || typeof value === \"boolean\") {\n  //       value = value.toString();\n  //     }\n\n  //     if (typeof value === \"string\") {\n  //       return value.includes(filterText);\n  //     }\n\n  //     if (Array.isArray(value)) {\n  //       return value.length > 0;\n  //     }\n\n  //     // Object\n  //     return Object.keys(value).length > 0;\n  //   });\n\n  //   if (new_row.length > 0) {\n  //     return row;\n  //   }\n\n  //   return [];\n  // });\n\n  // return new_table.filter((row) => row.length > 0);\n}\n\n// console.log(\n//   filterRows(\n//     [\n//       [\n//         [0, []],\n//         [2, { a: 12 }],\n//       ],\n//       [[3, 25]],\n//       [\n//         [4, {}],\n//         [5, [12]],\n//       ],\n//     ],\n//     \"5\"\n//   )\n// );\nexport function truncateStrings(data, n) {\n  if (getTypeOf(data) === \"string\") {\n    if (data.length <= n) {\n      return data;\n    }\n    return data.substr(0, n - 3) + \"...\";\n  }\n  Object.entries(data).forEach(([key, value]) => {\n    data[key] = truncateStrings(value, n);\n  });\n  return data;\n}\n","import React, { Component } from \"react\";\n\nclass Switch extends Component {\n  constructor(props) {\n    super(props);\n    const name = props.name;\n    this.id = \"flexSwitch\" + name[0].toUpperCase() + name.substring(1);\n  }\n\n  render() {\n    return (\n      <>\n        <div\n          className=\"form-switch pl-4\"\n          style={{\n            paddingLeft: 10,\n            marginBottom: 15,\n          }}\n        >\n          <span className=\"bmd-form-group\">\n            <label>\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                id={this.id}\n                name={this.props.name}\n                checked={this.props.checked}\n                onChange={this.props.onChange}\n              />\n              <span className=\"toggle\"></span>\n              {this.props.text}\n            </label>\n          </span>\n        </div>\n      </>\n    );\n  }\n\n  render_old() {\n    return (\n      <>\n        <div\n          className={this.props.className + \" form-check form-switch pl-4\"}\n          style={{ textAlign: \"left\" }}\n        >\n          <input\n            type=\"checkbox\"\n            className=\"form-check-input\"\n            id={this.id}\n            name={this.props.name}\n            checked={this.props.checked}\n            onChange={this.props.onChange}\n          />\n          <label className=\"form-check-label\" htmlFor={this.id}>\n            {this.props.text}\n          </label>\n        </div>\n      </>\n    );\n  }\n}\nexport default Switch;\n","import React, { Component } from \"react\";\nimport { VscWarning } from \"react-icons/vsc\";\nimport Editor from \"@monaco-editor/react\";\n\nimport Switch from \"./switch\";\nimport {\n  Alert,\n  Button,\n  Row,\n  Col,\n  Card,\n  InputGroup,\n  Form,\n  FormControl,\n  Spinner,\n  Table,\n} from \"react-bootstrap\";\n\nclass FormComponent extends Component {\n  state = {\n    jsonError: \"\",\n    errorMarkers: [],\n    isJsonValid: true,\n  };\n\n  jsonInputRef = null;\n\n  constructor(props) {\n    super(props);\n    this.jsonInputRef = React.createRef();\n    this.editorRef = React.createRef();\n    if (props.state.settings.darkMode) {\n      document.body.classList.add(\"bg-dark\");\n    }\n  }\n\n  handleEditorDidMount = (editor, monaco) => {\n    this.editorRef.current = editor;\n  };\n\n  toggleSettings = (event) => {\n    const target = event.target;\n    let new_state = { ...this.props.state };\n    new_state.settings[target.name] = target.checked;\n    this.props.setState(new_state);\n    if (target.name === \"darkMode\") {\n      document.body.classList.toggle(\"bg-dark\");\n      document.body.classList.toggle(\"text-white\");\n    }\n  };\n\n  handleEditorValidation = (markers) => {\n    this.setState({ errorMarkers: markers });\n  };\n\n  handleJsonInputChanged = (json_str, event) => {\n    let new_state = { ...this.props.state };\n    // if input is empty, ignore\n    if (!json_str) {\n      new_state.json = undefined;\n      new_state.isJsonValid = true;\n      new_state.jsonError = null;\n      this.props.setState(new_state);\n      return;\n    }\n\n    try {\n      // check if input is a valid json\n      const json_obj = JSON.parse(json_str);\n      new_state.json = json_obj;\n      new_state.isJsonValiderrorMarkers = true;\n      new_state.jsonError = null;\n      this.props.setState(new_state);\n    } catch (err) {\n      new_state.json = undefined;\n      new_state.isJsonValid = false;\n      new_state.jsonError = err;\n      this.props.setState(new_state);\n    }\n  };\n\n  getErrorPosition = (msg, defaultPos) => {\n    const index = msg.indexOf(\"at position \");\n    if (index >= 0) {\n      const pieces = msg.split(\" \");\n      const lastOnce = pieces[pieces.length - 1];\n      return parseInt(lastOnce);\n    }\n    return defaultPos;\n  };\n\n  goToErrorPosition = (event, errPos) => {\n    // let current = this.editorRef.current;\n    // console.log(event);\n    // this.props.setState(this.props.state, () => {\n    //   current.focus();\n    //   current.selectionStart = current.selectionEnd = errPos;\n    // });\n  };\n\n  render() {\n    // let textAreaClasses = \"form-control\";\n    // if (!this.props.state.isJsonValid) {\n    //   textAreaClasses += \" is-invalid\";\n    // }\n    const is_dark_mode = this.props.state.settings.darkMode;\n\n    return (\n      <>\n        <Row className=\"mt-3\">\n          <Col xs={9} style={{ textAlign: \"left\" }}>\n            Please enter your JSON here:\n            <Editor\n              // ref={ref}\n              language=\"json\"\n              defaultLanguage=\"json\"\n              height=\"220px\"\n              onChange={this.handleJsonInputChanged}\n              onMount={this.handleEditorDidMount}\n              onValidate={this.handleEditorValidation}\n              theme={is_dark_mode ? \"vs-dark\" : \"light\"}\n              loading={<Spinner variant=\"primary\" animation=\"border\" />}\n              options={{\n                wordWrap: \"on\",\n                minimap: { enabled: false },\n                //lineNumbers: \"off\",\n              }}\n            />\n            {/* <FormControl\n              isValid={this.props.state.isJsonValid && this.props.state.json}\n              isInvalid={!this.props.state.isJsonValid}\n              as=\"textarea\"\n              aria-label=\"With textarea\"\n              id=\"jsonTextarea\"\n              className={textAreaClasses}\n              defaultValue={this.props.state.json_str}\n              required\n              style={{ height: \"160px\" }}\n              onChange={this.handleJsonInputChanged}\n              ref={this.jsonInputRef}\n              placeholder=\"Enter you JSON here\"\n            /> */}\n          </Col>\n          <Col\n            xs={3}\n            style={{\n              float: \"none\",\n              display: \"table-cell\",\n              verticalAlign: \"top\",\n            }}\n          >\n            <Card\n              bg={is_dark_mode ? \"secondary\" : \"light\"}\n              text={is_dark_mode ? \"white\" : \"dark\"}\n              style={{ width: \"18rem\" }}\n              className=\"mb-2\"\n            >\n              <Card.Header\n                style={{\n                  width: \"80%\",\n                  marginToo: 30,\n                  marginLeft: \"10%\",\n                  borderRadius: \"0.5rem\",\n                }}\n              >\n                Settings\n              </Card.Header>\n              <Card.Body>\n                <Card.Title></Card.Title>\n                {this.props.toggleControls.map((control) => (\n                  <Switch\n                    key={control.name}\n                    name={control.name}\n                    text={control.text}\n                    checked={this.props.state.settings[control.name]}\n                    onChange={this.toggleSettings}\n                  />\n                ))}\n                <Card.Text></Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <InputGroup hasValidation>\n            {/* a hidden control */}\n            <FormControl isInvalid style={{ display: \"none\" }} />\n            <Form.Control.Feedback type=\"invalid\">\n              {this.renderError()}\n            </Form.Control.Feedback>\n          </InputGroup>\n        </Row>\n      </>\n    );\n  }\n\n  renderError = () => {\n    // check if json is valid\n    if (this.props.state.isJsonValid) return <React.Fragment />;\n\n    let err = this.props.state.jsonError;\n    if (!err) return <React.Fragment />;\n\n    return (\n      <Alert variant=\"danger\" className=\"mt-2\">\n        <Alert.Heading>\n          <VscWarning className=\"mr-2\" size={25} />\n          Ahhh! You got some error(s)!\n        </Alert.Heading>\n        {this.state.errorMarkers && (\n          <>\n            <Table responsive variant=\"danger\" size=\"sm\">\n              <thead style={{ verticalAlign: \"center\" }}>\n                <tr>\n                  <th rowSpan={2}>Message</th>\n                  <th colSpan={2}>Error Position</th>\n                </tr>\n                <tr>\n                  <th>From</th>\n                  <th>To</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.errorMarkers.map((marker, index) => {\n                  return (\n                    <tr key={index}>\n                      <th>{marker.message}</th>\n                      <td>\n                        {marker.startLineNumber}:{marker.startColumn}\n                      </td>\n                      <td>\n                        {marker.endLineNumber}:{marker.endColumn}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </>\n        )}\n      </Alert>\n    );\n\n    const inputRef = this.jsonInputRef.current;\n\n    let json_str = inputRef ? inputRef.value : \"\";\n    let errPos = this.getErrorPosition(err.message, json_str.length);\n\n    return (\n      <Alert variant=\"danger\" className=\"mt-2\">\n        <Row>\n          <Col>\n            <Alert.Heading>\n              <VscWarning className=\"mr-2\" size={25} />\n              {err.name}!\n            </Alert.Heading>\n            {err.message}.\n          </Col>\n          <Col xs={\"auto\"}>\n            <div className=\"d-flex justify-content-end\">\n              <Button\n                variant=\"outline-danger\"\n                onClick={(event) => this.goToErrorPosition(event, errPos)}\n              >\n                Locate Error\n              </Button>\n            </div>\n          </Col>\n        </Row>\n      </Alert>\n    );\n  };\n}\n\nexport default FormComponent;\n","import React, { Component } from \"react\";\nimport { MdContentCopy, MdClose } from \"react-icons/md\";\nimport { VscExpandAll, VscCollapseAll } from \"react-icons/vsc\";\nimport { ImSearch } from \"react-icons/im\";\nimport { Button, Row, Col, InputGroup, FormControl } from \"react-bootstrap\";\nimport ToolTipButton from \"./tooltip_button\";\nimport { notification } from \"./utils\";\n\nclass StatusBar extends Component {\n  constructor(props) {\n    super(props);\n    this.typing_timeout = 0;\n    this.searchRef = React.createRef();\n  }\n\n  handleExpandAll = () => {\n    this.props.handleExpandCollapseAll(\"+\");\n  };\n\n  handleCollapseAll = () => {\n    this.props.handleExpandCollapseAll(\"-\");\n  };\n\n  handleSearchTextChanged = (event) => {\n    if (this.timeout) clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.props.onSearchTextChanged(event.target.value);\n    }, 300);\n  };\n\n  clearSearchText = () => {\n    this.searchRef.current.value = \"\";\n    this.props.onSearchTextChanged(\"\"); //reset the state\n  };\n\n  copyPathToClipboard = () => {\n    const text = this.props.jsonRef.current.value;\n    if (text) {\n      navigator.clipboard.writeText(text);\n      notification.success(\"Copied to the Clipboard.\");\n    } else {\n      notification.warning(\"Nothing to copy.\");\n    }\n  };\n\n  render() {\n    return (\n      <Row\n        className=\"pt-2 pb-2\"\n        style={{\n          backgroundColor: \"#6c757d\",\n          zIndex: 1,\n          position: \"sticky\",\n          top: 0,\n        }}\n      >\n        <Col sm={\"auto\"}>\n          <InputGroup size=\"sm\">\n            <ToolTipButton\n              variant={\"primary\"}\n              tooltip={\"Expand All\"}\n              onMouseDown={() => this.props.handleExpandCollapseAll(\"+\")}\n              onMouseUp={() => this.props.handleExpandCollapseAll(\"\")}\n            >\n              <VscExpandAll />\n            </ToolTipButton>\n            <ToolTipButton\n              variant={\"warning\"}\n              tooltip={\"Collapse All\"}\n              onMouseDown={() => this.props.handleExpandCollapseAll(\"-\")}\n              onMouseUp={() => this.props.handleExpandCollapseAll(\"\")}\n            >\n              <VscCollapseAll />\n            </ToolTipButton>\n          </InputGroup>\n        </Col>\n        <Col sm={9}>\n          <InputGroup size=\"sm\">\n            <InputGroup.Text style={this.props.style}>\n              Clicked JSON Path:\n            </InputGroup.Text>\n            <FormControl\n              className=\"text-center font-weight-bold\"\n              disabled\n              style={{\n                backgroundColor: \"white\",\n                color: \"#198754\",\n              }}\n              value={this.props.json_path}\n              ref={this.props.jsonRef}\n            />\n            <ToolTipButton\n              variant={\"success\"}\n              tooltip={\"Copy this path\"}\n              onClick={this.copyPathToClipboard}\n            >\n              <MdContentCopy />\n            </ToolTipButton>\n          </InputGroup>\n        </Col>\n        <Col sm={2}>\n          <InputGroup className=\"mb-3 text-center\" size=\"sm\">\n            <FormControl\n              placeholder=\"Search...\"\n              aria-label=\"Search\"\n              aria-describedby=\"basic-addon2\"\n              onChange={this.handleSearchTextChanged}\n              style={{\n                backgroundColor: \"white\",\n              }}\n              ref={this.searchRef}\n            />\n            <InputGroup.Append>\n              <Button\n                variant=\"info\"\n                onClick={\n                  this.props.searchText ? this.clearSearchText : () => {}\n                }\n              >\n                {this.props.searchText ? <MdClose /> : <ImSearch />}\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default StatusBar;\n","import React, { Component, lazy, Suspense } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport StatusBar from \"./statusbar\";\nconst Visualizer = lazy(() => import(\"./visualizer\"));\n\nclass OutputComponent extends Component {\n  state = {\n    searchText: \"\",\n    selected_json_path: \"\",\n    expand_signal: \"\",\n  };\n\n  custom_themes = {\n    light: { backgroundColor: \"#ffffff\" },\n    dark: { backgroundColor: \"#212529\", color: \"white\" },\n  };\n\n  constructor() {\n    super();\n    this.selectedJsonRef = React.createRef();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (!props.data) {\n      return { selected_json_path: \"\" };\n    }\n    return null;\n  }\n\n  selectedJsonUpdated = (path) => {\n    let state = { ...this.state };\n    state.selected_json_path = path;\n    this.setState(state);\n  };\n\n  handleExpandCollapseAll = (signal) => {\n    let state = { ...this.state };\n    state.expand_signal = signal;\n    this.setState(state);\n  };\n\n  onSearchTextChanged = (new_value) => {\n    let state = { ...this.state };\n    state.searchText = new_value.toLowerCase();\n    this.setState(state);\n  };\n\n  render() {\n    if (this.props.data === undefined) {\n      return <React.Fragment />;\n    }\n\n    return (\n      <React.Fragment>\n        <StatusBar\n          style={\n            this.props.darkMode\n              ? this.custom_themes.dark\n              : this.custom_themes.light\n          }\n          darkMode={this.props.darkMode}\n          json_path={this.state.selected_json_path}\n          jsonRef={this.selectedJsonRef}\n          handleExpandCollapseAll={this.handleExpandCollapseAll}\n          onSearchTextChanged={this.onSearchTextChanged}\n          searchText={this.state.searchText}\n        />\n        <div\n          className={\n            \"row text-left mt-2 \" +\n            (this.props.darkMode ? \"text-white bg-dark\" : \"text-dark\")\n          }\n        >\n          <h5>Output:</h5>\n        </div>\n        <div className=\"row p-3\">\n          <Suspense\n            fallback={\n              <h1>\n                <Spinner animation=\"border\" variant=\"primary\" />\n              </h1>\n            }\n          >\n            <Visualizer\n              root={true}\n              data={this.props.data}\n              darkMode={this.props.darkMode}\n              truncateStrings={this.props.truncateStrings}\n              showJsonPath={this.selectedJsonUpdated}\n              expand_signal={this.state.expand_signal}\n              searchText={this.state.searchText}\n            />\n          </Suspense>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default OutputComponent;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport React, { Component } from \"react\";\nimport { Container, Navbar, Row } from \"react-bootstrap\";\nimport FormComponent from \"./components/form\";\nimport OutputComponent from \"./components/output\";\nimport { ToastContainer } from \"react-toastify\";\n\nclass App extends Component {\n  state = {\n    settings: {},\n    json: undefined,\n  };\n\n  constructor() {\n    super();\n    this.setState = this.setState.bind(this); //bind setState because it is passing down somewhere else\n\n    this.toggleControls = [\n      { name: \"darkMode\", text: \"Dark Mode\", default: false },\n      { name: \"monospaceFont\", text: \"Preserve Space\", default: true },\n      {\n        name: \"truncateStrings\",\n        text: \"Truncate Long Strings\",\n        default: false,\n      },\n    ];\n\n    let settings = {};\n    this.toggleControls.forEach((control) => {\n      settings[control.name] = control.default;\n    });\n    this.setState(settings);\n  }\n\n  render() {\n    return (\n      <div\n        className={\n          \"App \" + (this.state.settings.darkMode ? \"bg-dark\" : \"bg-light\")\n        }\n      >\n        <ToastContainer\n          position=\"bottom-center\"\n          autoClose={1000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable={false}\n          pauseOnHover={false}\n        />\n\n        <Navbar\n          variant=\"dark\"\n          style={{ borderRadius: 0, backgroundColor: \"#20232a\" }}\n        >\n          <Container fluid>\n            <Navbar.Brand>\n              <img\n                src=\"logo.svg\"\n                alt=\"\"\n                width=\"30\"\n                height=\"24\"\n                className=\"d-inline-block align-text-top\"\n              />\n              JSON to HTML Visualizer\n            </Navbar.Brand>\n          </Container>\n        </Navbar>\n\n        <div className=\"container-fluid\">\n          <Row variant={this.state.settings.darkMode ? \"dark\" : \"secondary\"}>\n            <div className=\"col-12\">\n              <FormComponent\n                state={this.state}\n                setState={this.setState}\n                toggleControls={this.toggleControls}\n              />\n            </div>\n            <div\n              className={\n                \"col-12 \" +\n                (this.state.settings.monospaceFont ? \"text-monospace\" : \"\")\n              }\n            >\n              <OutputComponent\n                data={this.state.json}\n                darkMode={this.state.settings.darkMode}\n                truncateStrings={this.state.settings.truncateStrings}\n              />\n            </div>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}