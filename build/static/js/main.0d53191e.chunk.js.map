{"version":3,"sources":["components/utils.js","components/logo.module.css","components/tooltip_button.jsx","components/switch.jsx","components/form.jsx","components/statusbar.jsx","components/output.jsx","components/logo.jsx","App.js","reportWebVitals.js","index.js"],"names":["toast_options","position","transition","Zoom","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","notification","success","msg","toast","warning","error","getTypeOf","data","Array","isArray","join_path","parent_path","key","makeTable","obj","keys","Object","every","common_keys","arr","length","res","slice","map","sub_arr","filter","x","includes","intersection","are_common_keys_from_array","startsWith","isObjectOfObjects","entries","flatMap","sub_obj","Set","table","forEach","main_key","parseInt","substr","row","path_key","value","push","headings","concat","obj_of_obj_to_table","doesObjectIncludeText","text","toString","toLowerCase","filterObj","filterText","new_obj","i","filtered_obj","flag","truncateStrings","n","manageMarkModeClasses","darkMode","document","body","classList","add","remove","module","exports","ToolTipButton","props","placement","TooltipPlacement","overlay","internalProps","tooltip","size","variant","onClick","onMouseDown","onMouseUp","children","Switch","name","id","toUpperCase","substring","style","paddingLeft","marginBottom","textAlign","Form","Check","type","this","label","checked","onChange","Component","FormComponent","state","jsonError","errorMarkers","isJsonValid","jsonInputRef","handleEditorDidMount","editor","monaco","editorRef","current","toggleSettings","event","target","new_state","settings","setState","handleEditorValidation","markers","handleJsonInputChanged","json_str","json","undefined","json_obj","JSON","parse","isJsonValiderrorMarkers","err","getErrorPosition","defaultPos","indexOf","pieces","split","lastOnce","goToErrorPosition","errPos","renderError","Fragment","Alert","className","Heading","Table","responsive","verticalAlign","marker","index","message","startLineNumber","startColumn","endLineNumber","endColumn","React","createRef","is_dark_mode","Row","Col","xs","language","defaultLanguage","height","onMount","onValidate","theme","loading","Spinner","animation","options","wordWrap","minimap","enabled","float","display","Card","bg","width","Header","marginTop","marginLeft","borderRadius","Body","Title","toggleControls","control","Text","InputGroup","hasValidation","FormControl","isInvalid","Control","Feedback","StatusBar","handleExpandAll","handleExpandCollapseAll","handleCollapseAll","handleSearchTextChanged","timeout","clearTimeout","setTimeout","onSearchTextChanged","clearSearchText","searchRef","copyPathToClipboard","jsonRef","navigator","clipboard","writeText","typing_timeout","backgroundColor","zIndex","top","sm","disabled","color","json_path","ref","placeholder","aria-label","aria-describedby","Append","Button","searchText","Visualizer","lazy","OutputComponent","selected_json_path","expand_signal","custom_themes","light","dark","selectedJsonUpdated","path","signal","new_value","selectedJsonRef","fallback","root","showJsonPath","MyLogo","css","App","bind","default","newestOnTop","rtl","pauseOnFocusLoss","Navbar","Container","fluid","Brand","monospaceFont","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0d53191e.chunk.js","sourcesContent":["import { Zoom, toast } from \"react-toastify\";\nconst toast_options = {\n  position: \"top-center\",\n  transition: Zoom,\n  autoClose: 1000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: false,\n  draggable: false,\n};\n\nexport const notification = {\n  success: (msg) => toast.success(msg, toast_options),\n  warning: (msg) => toast.warning(msg, toast_options),\n  error: (msg) => toast.error(msg, toast_options),\n};\n\n// Intersection for array of arrays\nfunction intersection(arr) {\n  if (arr.length < 1) {\n    return [];\n  }\n\n  let res = arr[0];\n  arr.slice(1).map((sub_arr) => {\n    res = res.filter((x) => sub_arr.includes(x));\n    return null;\n  });\n  return res;\n}\n\n// given two arrays,\n// X = [x1, x2, x3, ...]\n// Y = [y1, y2, y3, ...]\n// It will return [ [x1, y1], [x2, y2], [x3, y3], ...]\n// function zip(X, Y) {\n//   return X.map((xi, i) => [xi, Y[i]]);\n// }\n\nfunction getTypeOf(data) {\n  if (data === null) {\n    return \"null\";\n  }\n  if (Array.isArray(data)) {\n    return \"Array\";\n  }\n  return typeof data;\n}\n\n// function isArrayOfObjects(arr) {\n//   let is_array_of_obj = arr.every((x) => getTypeOf(x) === \"object\");\n//   return is_array_of_obj && arr.length > 1;\n// }\n\nfunction isObjectOfObjects(obj) {\n  if (getTypeOf(obj) === \"object\") {\n    const keys = Object.keys(obj);\n    let is_obj_of_obj = keys.every((key) => getTypeOf(obj[key]) === \"object\");\n    if (!is_obj_of_obj) {\n      return false;\n    }\n    const common_keys = intersection(keys.map((key) => Object.keys(obj[key])));\n    const are_common_keys_from_array = common_keys.every((key) =>\n      key.startsWith(\"index__\")\n    );\n    return (\n      keys.length > 1 && common_keys.length > 0 && !are_common_keys_from_array\n    );\n  }\n  return false;\n}\n\n// function transformObj(obj) {\n//   const object_type = getTypeOf(obj);\n//   if (object_type === \"Array\") {\n//     return obj.map((x, index) => [\"int__\" + index, x]);\n//   }\n//   if (object_type === \"object\") {\n//     return obj.entries.map(([key, value]) => [key, value]);\n//   }\n// }\n\n// function arr_to_table(arr) {\n//   let table = arr.map((value, key) => [\n//     { path_key: key, value: key },\n//     { path_key: \"\", value: value },\n//   ]);\n//   return { headings: [\"[index]\", \"\"], table: table };\n// }\n\nfunction obj_to_table(obj) {\n  let table = Object.entries(obj).map(([key, value]) => {\n    if (key.startsWith(\"index__\")) {\n      key = parseInt(key.substr(7));\n    }\n\n    return [\n      { path_key: key, value: key },\n      { path_key: \"\", value: value },\n    ];\n  });\n  return { headings: [], table: table };\n}\n\n// let { headings, table } = arr_to_table([10, 13, 123, 43]);\n// console.log(\"HEADINGS\", headings);\n// table.map((row) => {\n//   console.log(\"ROW\", row);\n// });\n\n// let { headings, table } = obj_to_table({ a: \"b\", c: \"d\", e: \"123\" });\n// console.log(\"HEADINGS \", headings);\n// table.map((row) => {\n//   console.log(\"ROW\", row);\n// });\n\n// function arr_of_obj_to_table(arr) {\n//   // find unique keys from the array of objects\n//   let keys = [...new Set(arr.flatMap((obj) => Object.keys(obj)))];\n//   let table = [];\n//   arr.forEach(function (obj, row_index) {\n//     let row = [{ path_key: row_index, value: row_index }];\n//     keys.forEach(function (key) {\n//       if (key in obj) {\n//         row.push({ path_key: key, value: obj[key] });\n//       } else {\n//         row.push(null);\n//       }\n//     });\n//     table.push(row);\n//   });\n//   return { headings: [\"[index]\"].concat(keys), table: table };\n// }\n\n// let { headings, table } = arr_of_obj_to_table([\n//   { a: \"b\", b: \"c\" },\n//   { a: \"b\", c: \"c\" },\n//   { a: \"b\" },\n// ]);\n// console.log(\"HEADINGS\", headings);\n// table.map((row) => {\n//   console.log(\"ROW\", row);\n// });\n\nfunction obj_of_obj_to_table(obj) {\n  // find unique keys from the object of objects\n  let keys = Object.entries(obj).flatMap(([_, sub_obj]) =>\n    Object.keys(sub_obj)\n  );\n  keys = [...new Set(keys)];\n\n  let table = [];\n  Object.entries(obj).forEach(function ([main_key, sub_obj]) {\n    if (main_key.startsWith(\"index__\")) {\n      main_key = parseInt(main_key.substr(7));\n    }\n    let row = [{ path_key: main_key, value: main_key }];\n    keys.forEach(function (key) {\n      if (key.startsWith(\"index__\")) {\n        key = parseInt(key.substr(7));\n      }\n      if (key in sub_obj) {\n        row.push({ path_key: key, value: sub_obj[key] });\n      } else {\n        row.push(null);\n      }\n    });\n    table.push(row);\n  });\n  return { headings: [\"[key]\"].concat(keys), table: table };\n}\n\n// const { headings, table } = obj_of_obj_to_table({\n//   key1: { sub_key1: \"b\", sub_key2: \"c\" },\n//   key2: { sub_key1: \"b\", sub_key3: \"c\" },\n//   key3: { sub_key4: \"b\" },\n// });\n// console.log(\"HEADINGS\", headings);\n// table.map((row) => {\n//   console.log(\"ROW\", row);\n// });\n\nexport function join_path(parent_path, key) {\n  if (!parent_path) {\n    parent_path = \"root\";\n  }\n\n  if (key === \"\" || key === \"[index]\") {\n    return parent_path;\n  }\n\n  const current_path = typeof key === \"string\" ? `[\"${key}\"]` : `[${key}]`;\n  return parent_path + current_path;\n}\n\nexport default function makeTable(data) {\n  // if (Array.isArray(data)) {\n  //   // An Array of objects\n  //   if (isArrayOfObjects(data)) {\n  //     return arr_of_obj_to_table(data);\n  //   }\n  //   // A Simple Array\n  //   return arr_to_table(data);\n  // } else\n  if (typeof data === \"object\") {\n    // An Object having another object as a value for each of its properties\n    // i.e. A nested Object\n    if (isObjectOfObjects(data)) {\n      return obj_of_obj_to_table(data);\n    }\n    // An Simple Object\n    return obj_to_table(data);\n  }\n}\n\nfunction doesObjectIncludeText(obj, text) {\n  if (obj === null) {\n    return \"null\".includes(text);\n  }\n  if (typeof obj === \"number\" || typeof obj === \"boolean\") {\n    return obj.toString().toLowerCase().includes(text);\n  }\n  if (typeof obj === \"string\") {\n    return obj.toLowerCase().includes(text);\n  }\n  return \"unsure\";\n}\n\nexport function filterObj(obj, filterText) {\n  // This function will accept `obj` of type {Array/Object}\n  // and will remove the elements/properties which do not include `filterText`\n\n  // convert Array to an object so that index are preserved when some elements are filtered out.\n  if (getTypeOf(obj) === \"Array\") {\n    let new_obj = {};\n    obj.forEach((x, i) => {\n      new_obj[\"index__\" + i] = x;\n    });\n    obj = new_obj;\n  }\n\n  if (!filterText) {\n    return obj;\n  }\n\n  let filtered_obj = {};\n  Object.entries(obj).forEach(([key, value]) => {\n    const flag =\n      doesObjectIncludeText(key, filterText) ||\n      doesObjectIncludeText(value, filterText);\n    if (flag === true) {\n      filtered_obj[key] = value;\n    } else if (flag === \"unsure\") {\n      filtered_obj[key] = value;\n      // value = filterObj(value, filterText);\n      // if (Object.keys(value).length > 0) {\n      //   filtered_obj[key] = value;\n      // }\n    }\n  });\n  return filtered_obj;\n  // const new_table = table.map((row) => {\n  //   let new_row = row.filter(function (cell) {\n  //     if (cell === null) {\n  //       return false;\n  //     }\n\n  //     let { value } = cell;\n  //     if (value === null) {\n  //       return false;\n  //     }\n\n  //     if (typeof value === \"number\" || typeof value === \"boolean\") {\n  //       value = value.toString();\n  //     }\n\n  //     if (typeof value === \"string\") {\n  //       return value.includes(filterText);\n  //     }\n\n  //     if (Array.isArray(value)) {\n  //       return value.length > 0;\n  //     }\n\n  //     // Object\n  //     return Object.keys(value).length > 0;\n  //   });\n\n  //   if (new_row.length > 0) {\n  //     return row;\n  //   }\n\n  //   return [];\n  // });\n\n  // return new_table.filter((row) => row.length > 0);\n}\n\n// console.log(\n//   filterRows(\n//     [\n//       [\n//         [0, []],\n//         [2, { a: 12 }],\n//       ],\n//       [[3, 25]],\n//       [\n//         [4, {}],\n//         [5, [12]],\n//       ],\n//     ],\n//     \"5\"\n//   )\n// );\nexport function truncateStrings(data, n) {\n  if (getTypeOf(data) === \"string\") {\n    if (data.length <= n) {\n      return data;\n    }\n    return data.substr(0, n - 3) + \"...\";\n  }\n  Object.entries(data).forEach(([key, value]) => {\n    data[key] = truncateStrings(value, n);\n  });\n  return data;\n}\n\nexport function manageMarkModeClasses(darkMode) {\n  if (darkMode) {\n    document.body.classList.add(\"bg-dark\");\n    document.body.classList.add(\"text-white\");\n  } else {\n    document.body.classList.remove(\"bg-dark\");\n    document.body.classList.remove(\"text-white\");\n  }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logoFont\":\"logo_logoFont__1AINK\",\"openingCurly\":\"logo_openingCurly__1j0co\",\"semiColon\":\"logo_semiColon__MC4q7\",\"closingCurly\":\"logo_closingCurly__1j_W8\"};","import React from \"react\";\nimport { Button, OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\nfunction ToolTipButton(props) {\n  function renderTooltip(internalProps) {\n    return <Tooltip {...internalProps}>{props.tooltip}</Tooltip>;\n  }\n\n  return (\n    <OverlayTrigger placement={props.TooltipPlacement} overlay={renderTooltip}>\n      <Button\n        size=\"sm\"\n        variant={props.variant}\n        onClick={props.onClick}\n        onMouseDown={props.onMouseDown}\n        onMouseUp={props.onMouseUp}\n      >\n        {props.children}\n      </Button>\n    </OverlayTrigger>\n  );\n\n  // <Button\n  //   ref={ref}\n  //   size=\"sm\"\n  //   variant={props.variant}\n  // onClick={props.onClick}\n  // onMouseDown={props.onMouseDown}\n  // onMouseUp={props.onMouseUp}\n  // >\n  //   {props.children}\n  // </Button>\n\n  // return (\n  //   <OverlayTrigger\n  //     placement=\"top\"\n\n  //     overlay={renderTooltip}\n  //   >\n  //     <Button\n  //       size=\"sm\"\n  //       variant={props.variant}\n  //       onClick={props.onClick}\n  //       onMouseDown={props.onMouseDown}\n  //       onMouseUp={props.onMouseUp}\n  //     >\n  //       {props.children}\n  //     </Button>\n  //   </OverlayTrigger>\n  // );\n}\n\nexport default ToolTipButton;\n","import React, { Component } from \"react\";\nimport Form from \"react-bootstrap/Form\";\n\nclass Switch extends Component {\n  constructor(props) {\n    super(props);\n    const name = props.name;\n    this.id = \"flexSwitch\" + name[0].toUpperCase() + name.substring(1);\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          paddingLeft: 10,\n          marginBottom: 15,\n          textAlign: \"left\",\n        }}\n      >\n        <Form.Check\n          type=\"switch\"\n          id={this.id}\n          label={this.props.text}\n          name={this.props.name}\n          checked={this.props.checked}\n          onChange={this.props.onChange}\n        />\n      </div>\n    );\n  }\n}\nexport default Switch;\n","import React, { Component } from \"react\";\nimport { VscWarning } from \"react-icons/vsc\";\nimport Editor from \"@monaco-editor/react\";\nimport { manageMarkModeClasses } from \"./utils\";\n\nimport Switch from \"./switch\";\nimport {\n  Alert,\n  Row,\n  Col,\n  Card,\n  InputGroup,\n  Form,\n  FormControl,\n  Spinner,\n  Table,\n} from \"react-bootstrap\";\n\nclass FormComponent extends Component {\n  state = {\n    jsonError: \"\",\n    errorMarkers: [],\n    isJsonValid: true,\n  };\n\n  jsonInputRef = null;\n\n  constructor(props) {\n    super(props);\n    this.jsonInputRef = React.createRef();\n    this.editorRef = React.createRef();\n    if (props.state.settings.darkMode) {\n      document.body.classList.add(\"bg-dark\");\n    }\n  }\n\n  handleEditorDidMount = (editor, monaco) => {\n    this.editorRef.current = editor;\n  };\n\n  toggleSettings = (event) => {\n    const target = event.target;\n    let new_state = { ...this.props.state };\n    new_state.settings[target.name] = target.checked;\n    this.props.setState(new_state);\n    if (target.name === \"darkMode\") {\n      manageMarkModeClasses(target.checked);\n    }\n  };\n\n  handleEditorValidation = (markers) => {\n    this.setState({ errorMarkers: markers });\n  };\n\n  handleJsonInputChanged = (json_str, event) => {\n    let new_state = { ...this.props.state };\n    // if input is empty, ignore\n    if (!json_str) {\n      new_state.json = undefined;\n      new_state.isJsonValid = true;\n      new_state.jsonError = null;\n      this.props.setState(new_state);\n      return;\n    }\n\n    try {\n      // check if input is a valid json\n      const json_obj = JSON.parse(json_str);\n      new_state.json = json_obj;\n      new_state.isJsonValiderrorMarkers = true;\n      new_state.jsonError = null;\n      this.props.setState(new_state);\n    } catch (err) {\n      new_state.json = undefined;\n      new_state.isJsonValid = false;\n      new_state.jsonError = err;\n      this.props.setState(new_state);\n    }\n  };\n\n  getErrorPosition = (msg, defaultPos) => {\n    const index = msg.indexOf(\"at position \");\n    if (index >= 0) {\n      const pieces = msg.split(\" \");\n      const lastOnce = pieces[pieces.length - 1];\n      return parseInt(lastOnce);\n    }\n    return defaultPos;\n  };\n\n  goToErrorPosition = (event, errPos) => {\n    // let current = this.editorRef.current;\n    // console.log(event);\n    // this.props.setState(this.props.state, () => {\n    //   current.focus();\n    //   current.selectionStart = current.selectionEnd = errPos;\n    // });\n  };\n\n  render() {\n    const is_dark_mode = this.props.state.settings.darkMode;\n\n    return (\n      <>\n        <Row className=\"mt-3\">\n          <Col xs={9} style={{ textAlign: \"left\" }}>\n            Please enter your JSON here:\n            <Editor\n              language=\"json\"\n              defaultLanguage=\"json\"\n              height=\"220px\"\n              onChange={this.handleJsonInputChanged}\n              onMount={this.handleEditorDidMount}\n              onValidate={this.handleEditorValidation}\n              theme={is_dark_mode ? \"vs-dark\" : \"light\"}\n              loading={<Spinner variant=\"primary\" animation=\"border\" />}\n              options={{\n                wordWrap: \"on\",\n                minimap: { enabled: false },\n                //lineNumbers: \"off\",\n              }}\n            />\n          </Col>\n          <Col\n            xs={3}\n            style={{\n              float: \"none\",\n              display: \"table-cell\",\n              verticalAlign: \"top\",\n            }}\n          >\n            <Card\n              bg={is_dark_mode ? \"secondary\" : \"light\"}\n              text={is_dark_mode ? \"white\" : \"dark\"}\n              style={{ width: \"18rem\" }}\n              className=\"mb-2\"\n            >\n              <Card.Header\n                style={{\n                  width: \"80%\",\n                  marginTop: 20,\n                  marginLeft: \"10%\",\n                  borderRadius: \"0.5rem\",\n                }}\n              >\n                Settings\n              </Card.Header>\n              <Card.Body>\n                <Card.Title></Card.Title>\n                {this.props.toggleControls.map((control) => (\n                  <Switch\n                    key={control.name}\n                    name={control.name}\n                    text={control.text}\n                    checked={this.props.state.settings[control.name]}\n                    onChange={this.toggleSettings}\n                  />\n                ))}\n                <Card.Text></Card.Text>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n        <Row>\n          <InputGroup hasValidation>\n            {/* a hidden control */}\n            <FormControl isInvalid style={{ display: \"none\" }} />\n            <Form.Control.Feedback type=\"invalid\">\n              {this.renderError()}\n            </Form.Control.Feedback>\n          </InputGroup>\n        </Row>\n      </>\n    );\n  }\n\n  renderError = () => {\n    // check if json is valid\n    if (this.props.state.isJsonValid) return <React.Fragment />;\n\n    let err = this.props.state.jsonError;\n    if (!err) return <React.Fragment />;\n\n    return (\n      <Alert variant=\"danger\" className=\"mt-2\">\n        <Alert.Heading>\n          <VscWarning className=\"mr-2\" size={25} />\n          Uh oh! You got some error(s)!\n        </Alert.Heading>\n        {this.state.errorMarkers && (\n          <>\n            <Table responsive variant=\"danger\" size=\"sm\">\n              <thead style={{ verticalAlign: \"center\" }}>\n                <tr>\n                  <th>Message</th>\n                  <th>Staring Position</th>\n                  <th>Ending Position</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.errorMarkers.map((marker, index) => {\n                  return (\n                    <tr key={index}>\n                      <th>{marker.message}</th>\n                      <td>\n                        {marker.startLineNumber}:{marker.startColumn}\n                      </td>\n                      <td>\n                        {marker.endLineNumber}:{marker.endColumn}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </Table>\n          </>\n        )}\n      </Alert>\n    );\n  };\n}\n\nexport default FormComponent;\n","import React, { Component } from \"react\";\nimport { MdContentCopy, MdClose } from \"react-icons/md\";\nimport { VscExpandAll, VscCollapseAll } from \"react-icons/vsc\";\nimport { ImSearch } from \"react-icons/im\";\nimport { Button, Row, Col, InputGroup, FormControl } from \"react-bootstrap\";\nimport ToolTipButton from \"./tooltip_button\";\nimport { notification } from \"./utils\";\n\nclass StatusBar extends Component {\n  constructor(props) {\n    super(props);\n    this.typing_timeout = 0;\n    this.searchRef = React.createRef();\n  }\n\n  handleExpandAll = () => {\n    this.props.handleExpandCollapseAll(\"+\");\n  };\n\n  handleCollapseAll = () => {\n    this.props.handleExpandCollapseAll(\"-\");\n  };\n\n  handleSearchTextChanged = (event) => {\n    if (this.timeout) clearTimeout(this.timeout);\n    this.timeout = setTimeout(() => {\n      this.props.onSearchTextChanged(event.target.value);\n    }, 300);\n  };\n\n  clearSearchText = () => {\n    this.searchRef.current.value = \"\";\n    this.props.onSearchTextChanged(\"\"); //reset the state\n  };\n\n  copyPathToClipboard = () => {\n    const text = this.props.jsonRef.current.value;\n    if (text) {\n      navigator.clipboard.writeText(text);\n      notification.success(\"Copied to the Clipboard.\");\n    } else {\n      notification.warning(\"Nothing to copy.\");\n    }\n  };\n\n  render() {\n    return (\n      <Row\n        className=\"pt-2 pb-2\"\n        style={{\n          backgroundColor: \"#6c757d\",\n          zIndex: 1,\n          position: \"sticky\",\n          top: 0,\n        }}\n      >\n        <Col sm={\"auto\"}>\n          <InputGroup size=\"sm\">\n            <ToolTipButton\n              variant={\"primary\"}\n              tooltip={\"Expand All\"}\n              TooltipPlacement=\"bottom\"\n              onMouseDown={() => this.props.handleExpandCollapseAll(\"+\")}\n              onMouseUp={() => this.props.handleExpandCollapseAll(\"\")}\n            >\n              <VscExpandAll />\n            </ToolTipButton>\n            <ToolTipButton\n              variant={\"warning\"}\n              tooltip={\"Collapse All\"}\n              TooltipPlacement=\"bottom\"\n              onMouseDown={() => this.props.handleExpandCollapseAll(\"-\")}\n              onMouseUp={() => this.props.handleExpandCollapseAll(\"\")}\n            >\n              <VscCollapseAll />\n            </ToolTipButton>\n          </InputGroup>\n        </Col>\n        <Col sm={9}>\n          <InputGroup size=\"sm\">\n            <InputGroup.Text style={this.props.style}>\n              Clicked JSON Path:\n            </InputGroup.Text>\n            <FormControl\n              className=\"text-center font-weight-bold\"\n              disabled\n              style={{\n                backgroundColor: \"white\",\n                color: \"#198754\",\n              }}\n              value={this.props.json_path}\n              ref={this.props.jsonRef}\n            />\n            <ToolTipButton\n              variant={\"success\"}\n              tooltip={\"Copy this path\"}\n              TooltipPlacement=\"bottom\"\n              onClick={this.copyPathToClipboard}\n            >\n              <MdContentCopy />\n            </ToolTipButton>\n          </InputGroup>\n        </Col>\n        <Col sm={2}>\n          <InputGroup className=\"mb-3 text-center\" size=\"sm\">\n            <FormControl\n              placeholder=\"Search...\"\n              aria-label=\"Search\"\n              aria-describedby=\"basic-addon2\"\n              onChange={this.handleSearchTextChanged}\n              style={{\n                backgroundColor: \"white\",\n              }}\n              ref={this.searchRef}\n            />\n            <InputGroup.Append>\n              <Button\n                variant=\"info\"\n                onClick={\n                  this.props.searchText ? this.clearSearchText : () => {}\n                }\n              >\n                {this.props.searchText ? <MdClose /> : <ImSearch />}\n              </Button>\n            </InputGroup.Append>\n          </InputGroup>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default StatusBar;\n","import React, { Component, lazy, Suspense } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport StatusBar from \"./statusbar\";\nconst Visualizer = lazy(() => import(\"./visualizer\"));\n\nclass OutputComponent extends Component {\n  state = {\n    searchText: \"\",\n    selected_json_path: \"\",\n    expand_signal: \"\",\n  };\n\n  custom_themes = {\n    light: { backgroundColor: \"#ffffff\" },\n    dark: { backgroundColor: \"#212529\", color: \"white\" },\n  };\n\n  constructor() {\n    super();\n    this.selectedJsonRef = React.createRef();\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    if (!props.data) {\n      return { selected_json_path: \"\" };\n    }\n    return null;\n  }\n\n  selectedJsonUpdated = (path) => {\n    let state = { ...this.state };\n    state.selected_json_path = path;\n    this.setState(state);\n  };\n\n  handleExpandCollapseAll = (signal) => {\n    let state = { ...this.state };\n    state.expand_signal = signal;\n    this.setState(state);\n  };\n\n  onSearchTextChanged = (new_value) => {\n    let state = { ...this.state };\n    state.searchText = new_value.toLowerCase();\n    this.setState(state);\n  };\n\n  render() {\n    if (this.props.data === undefined) {\n      return <React.Fragment />;\n    }\n\n    return (\n      <React.Fragment>\n        <StatusBar\n          style={\n            this.props.darkMode\n              ? this.custom_themes.dark\n              : this.custom_themes.light\n          }\n          darkMode={this.props.darkMode}\n          json_path={this.state.selected_json_path}\n          jsonRef={this.selectedJsonRef}\n          handleExpandCollapseAll={this.handleExpandCollapseAll}\n          onSearchTextChanged={this.onSearchTextChanged}\n          searchText={this.state.searchText}\n        />\n        <div\n          className={\n            \"row text-left mt-2 \" +\n            (this.props.darkMode ? \"text-white bg-dark\" : \"text-dark\")\n          }\n        >\n          <h5>Output:</h5>\n        </div>\n        <div className=\"row p-3\">\n          <Suspense\n            fallback={\n              <h1>\n                <Spinner animation=\"border\" variant=\"primary\" />\n              </h1>\n            }\n          >\n            <Visualizer\n              root={true}\n              data={this.props.data}\n              darkMode={this.props.darkMode}\n              truncateStrings={this.props.truncateStrings}\n              showJsonPath={this.selectedJsonUpdated}\n              expand_signal={this.state.expand_signal}\n              searchText={this.state.searchText}\n            />\n          </Suspense>\n        </div>\n      </React.Fragment>\n    );\n  }\n}\nexport default OutputComponent;\n","import React from \"react\";\nimport * as css from \"./logo.module.css\";\n\nfunction MyLogo() {\n  return (\n    <span className={css.logoFont}>\n      <span className={css.openingCurly}>&#123;</span>\n      <span className={css.semiColon}>;</span>\n      <span className={css.closingCurly}>&#125;</span>\n    </span>\n  );\n}\n\nexport default MyLogo;\n","import \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport React, { Component } from \"react\";\nimport { Container, Navbar, Row } from \"react-bootstrap\";\nimport FormComponent from \"./components/form\";\nimport OutputComponent from \"./components/output\";\nimport { ToastContainer } from \"react-toastify\";\nimport { manageMarkModeClasses } from \"./components/utils\";\nimport MyLogo from \"./components/logo\";\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.setState = this.setState.bind(this); //bind setState because it is passing down somewhere else\n\n    this.toggleControls = [\n      { name: \"darkMode\", text: \"Dark Mode\", default: false },\n      { name: \"monospaceFont\", text: \"Preserve Space\", default: true },\n      {\n        name: \"truncateStrings\",\n        text: \"Truncate Long Strings\",\n        default: false,\n      },\n    ];\n\n    this.state = {\n      settings: {},\n      json: undefined,\n    };\n    this.toggleControls.forEach((control) => {\n      this.state.settings[control.name] = control.default;\n      if (control.name === \"darkMode\") {\n        manageMarkModeClasses(control.default);\n      }\n    });\n  }\n\n  render() {\n    return (\n      <div\n        className={\n          \"App \" + (this.state.settings.darkMode ? \"bg-dark\" : \"bg-light\")\n        }\n      >\n        <ToastContainer\n          position=\"bottom-center\"\n          autoClose={1000}\n          hideProgressBar={false}\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnFocusLoss\n          draggable={false}\n          pauseOnHover={false}\n        />\n\n        <Navbar variant=\"dark\" style={{ backgroundColor: \"#20232a\" }}>\n          <Container fluid>\n            <Navbar.Brand>\n              <MyLogo />\n              JSON to HTML Visualizer\n            </Navbar.Brand>\n          </Container>\n        </Navbar>\n\n        <div className=\"container-fluid\">\n          <Row variant={this.state.settings.darkMode ? \"dark\" : \"secondary\"}>\n            <div className=\"col-12\">\n              <FormComponent\n                state={this.state}\n                setState={this.setState}\n                toggleControls={this.toggleControls}\n              />\n            </div>\n            <div\n              className={\n                \"col-12 \" +\n                (this.state.settings.monospaceFont ? \"text-monospace\" : \"\")\n              }\n            >\n              <OutputComponent\n                data={this.state.json}\n                darkMode={this.state.settings.darkMode}\n                truncateStrings={this.state.settings.truncateStrings}\n              />\n            </div>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}